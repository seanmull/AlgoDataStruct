Stability in sorting

Lets say I have the following array
1, 4, 2', 6, 8, 2, 10
A stable sort would return the following
1, 2', 2, 4, 6, 8, 10
While an unstable sort would return the following
1, 2, 2', 4, 6, 8, 10

A stable sort maintains the order of the 2's.  Stability in sorting
is important for situations where we may want to sort by more then one
criteria.  Imagine these were all card with different suits.  Club,
Spade, Diamond and Heart was the rank order.  A stable sort would try
to maintain the previous sort operation.  An unstable sort would just try
follow the rank order of the suit irrespective of how things were sorted
before.

Take the following example:
(Tom , 36)      (Jim , 30)     (Jim , 30)
(Jim , 30)  =>  (Tom , 36) =>  (Tom , 28)
(Tom , 28)      (Tom , 28)     (Tom , 36)
          Sort by        Sort by
          Name             Age
          
A stable sort attempt to maintain some characteristics of the sort by name
after sort by age.  While and unstable sort would ignore that Jim was before
Tom.

Quicksort
Really well explained here:
https://www.youtube.com/watch?v=XE4VP_8Y0BU

Algorthm is performed in the following steps.
1. Pick a pivot point (usually the last element).
2. Gradually move the pivot toward the center while placing
elements greater then it after and elements left then it before.
3. Split array into left and right and perform steps 1 & 2 to them
recursively.

Pseudocode
algorithm quicksort(A, lo, hi) is
    if lo < hi then
        p := partition(A, lo, hi)
        quicksort(A, lo, p - 1)
        quicksort(A, p + 1, hi)

algorithm partition(A, lo, hi) is
    pivot := A[hi]
    i := lo
    for j := lo to hi do
        if A[j] < pivot then
            swap A[i] with A[j]
            i := i + 1
    swap A[i] with A[hi]
    return i
    
Take this array 
9, 4, 3, 6, 1, 4

First partition call
i = lo = 0
hi = 5
loop from lo to hi
3 < 4
swap 9 with 3
3, 4, 9, 6, 1, 4
i = 1
1 < 4
swap 4 with 1
3, 1, 9, 6, 4, 4
i = 2
swap pivot(4) with 9
3, 1, 4(P), 6, 4, 9


                   